# Default values for oidc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

clusterDomain: cluster.local

image:
  repository: thomseddon/traefik-forward-auth
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: hub
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP

# OpenShift specific settings
route:
  enabled: false
  annotations: {}
#    link.argocd.argoproj.io/external-link: https://argocd.apps.sandbox.x8i5.p1.openshiftapps.com
  host: oidc.apps.sandbox.x8i5.p1.openshiftapps.com

ingress:
  enable: true
  annotations: 
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
  hosts:
    - host: oidc.apps.sandbox.x8i5.p1.openshiftapps.com
  tls: []
#    - secretName: oidc-tls
#      hosts:
#        - oidc.apps.sandbox.x8i5.p1.openshiftapps.com
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}

# OIDC configuration
# For more information, see: https://help.planta.de/tec/all/de/oidc-mit-planta-secure-19792984.html
oidcSettings:
  # The following Secret is expected to be created by the user
  # and should contain the following keys:
  # - clientID
  # - clientSecret
  secretName: "oidc-secret"
  insecureCookie: false
  lifetime: 43200
  issuerURL: "https://keycloak.apps.sandbox.x8i5.p1.openshiftapps.com/auth/realms/example"
  webclient:
    host: webclient.apps.sandbox.x8i5.p1.openshiftapps.com
    port: 5000
    path: /_oauth
  secure:
    host: secure.apps.sandbox.x8i5.p1.openshiftapps.com
    port: 8181
    path: /PlantaServerAdapter/_oauth

traefik:
  ingressClass:
    enabled: true
    isDefaultClass: true
    # name: my-custom-class
  providers:
    kubernetesCRD:
      allowExternalNameServices: true  
    kubernetesIngress:
      enabled: true
      namespaces: []
    file:
      enabled: false
      watch: true
      content: ""
  additionalArguments:
    - "--global.checkNewVersion=false"
    - "--global.sendAnonymousUsage=false"
    # - "--log.level=DEBUG"
  ports:
    web:
      port: 8000
      protocol: TCP
      # redirectTo: websecure
    websecure:
      port: 8443
      protocol: TCP
      tls:
        enabled: true
        options: ""
        certResolver: ""
        domains: []
      middlewares: []
  tlsOptions: {}
  tlsStore: {}
  service:
    enabled: true
    single: true
    type: LoadBalancer
    annotations: {}
    annotationsTCP: {}
    annotationsUDP: {}
    labels: {}
    spec: {}
    loadBalancerSourceRanges: []
    # loadBalancerClass: service.k8s.aws/nlb
    externalIPs: []
    additionalServices: {}
  autoscaling:
    enabled: true
    maxReplicas: 3
  certResolvers: {}
  hostNetwork: false
  rbac:
    enabled: true
    namespaced: false
    secretResourceNames: []
  podSecurityPolicy:
    enabled: false
  serviceAccount:
    name: ""
  serviceAccountAnnotations: {}
  resources: {}
  # requests:
  #   cpu: "100m"
  #   memory: "50Mi"
  # limits:
  #   cpu: "300m"
  #   memory: "150Mi"
  affinity: {}
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  priorityClassName: ""
  securityContext:
    capabilities:
      drop: [ALL]
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
  podSecurityContext:
    fsGroupChangePolicy: "OnRootMismatch"
    runAsGroup: 65532
    runAsNonRoot: true
    runAsUser: 65532
  extraObjects: []
